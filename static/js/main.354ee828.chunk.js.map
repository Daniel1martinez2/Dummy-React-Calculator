{"version":3,"sources":["Components/Calculator/Button/Button.module.css","Components/Calculator/Screen.module.css","Components/Calculator/Board.module.css","Components/Calculator/Calculator.module.css","Components/Calculator/Button/Button.js","Components/Calculator/Board.js","Components/Calculator/Screen.js","Components/Calculator/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","props","childValue","children","buttonType","className","classes","key","onClick","Board","board","map","btn","onSetScreenValue","onSetResult","Screen","screen","screenLogic","Calculator","useState","setScreenLogic","calculator","value","prev","evaluate","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,cAAc,4BAA4B,KAAO,qBAAqB,gBAAgB,8BAA8B,MAAQ,wB,mBCAxKD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,mBCA1BD,EAAOC,QAAU,CAAC,WAAa,iC,+MCShBC,EATA,SAAAC,GACb,IAAMC,EAAaD,EAAME,SACrBC,EAAa,cAGjB,MAFkB,MAAfF,GAAoC,MAAfA,GAAqC,MAAfA,IAAqBE,EAAa,iBAC9D,MAAfF,IAAoBE,EAAa,SAElC,wBAAQC,UAAS,UAAKC,IAAQC,IAAb,YAAoBD,IAAQF,GAA5B,YAA0D,MAAfF,EAAqBI,IAAO,KAAU,IAAME,QAAS,kBAAIP,EAAMO,QAAQN,IAAnI,SAAiJA,KCKtIO,EATD,SAAAR,GAEZ,OACE,uBAAMI,UAAWC,IAAQI,MAAzB,UAFmB,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAGxDC,KAAI,SAAAC,GAAG,OAAG,cAAC,EAAD,CAAQJ,QAASP,EAAMY,iBAAvB,SAA0CD,OAClE,cAAC,EAAD,CAAQJ,QAAS,kBAAIP,EAAMa,eAA3B,mB,iBCASC,EAPA,SAAAd,GACb,OACE,yBAASI,UAAWC,IAAQU,OAA5B,SACE,oBAAIX,UAAWC,IAAO,cAAtB,SAA0CL,EAAMgB,iB,iBCkBvCC,EAjBI,SAAAjB,GACjB,MAAsCkB,mBAAS,IAA/C,mBAAOF,EAAP,KAAoBG,EAApB,KASA,OACE,uBAAMf,UAAWC,IAAQe,WAAzB,UACE,cAAC,EAAD,CAAQJ,YAAaA,IACrB,cAAC,EAAD,CAAOJ,iBAVc,SAACS,GACxBF,GAAe,SAAAG,GAAI,gBAAOA,GAAP,OAAcD,OASaR,YAN3B,WACnBM,GAAe,SAAAG,GAAI,OAAIC,YAASD,aCArBE,MAVf,WACE,OACE,sBAAKpB,UAAW,YAAhB,UACE,4CACA,cAAC,EAAD,QCKSqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.354ee828.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"key\":\"Button_key__2ZT6D\",\"key--number\":\"Button_key--number__212qP\",\"zero\":\"Button_zero__2CCz-\",\"key--operator\":\"Button_key--operator__P8gLe\",\"equal\":\"Button_equal__9Idid\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screen\":\"Screen_screen__1SRkL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__3amkk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calculator\":\"Calculator_calculator__Ru50M\"};","import classes from './Button.module.css'; \nconst Button = props => {\n  const childValue = props.children;\n  let buttonType = 'key--number'; \n  if(childValue === '+' ||childValue === '-' || childValue === '*' ) buttonType = 'key--operator'; \n  if(childValue === '=') buttonType = 'equal'\n  return(\n    <button className={`${classes.key} ${classes[buttonType]} ${childValue === '0' ? classes['zero']: ''}`} onClick={()=>props.onClick(childValue)}>{childValue}</button>\n  );\n}\nexport default Button; ","import classes from './Board.module.css'; \nimport Button from './Button/Button';\n\nconst Board = props => {\n  const buttonsValue = ['7','8','9','*','4','5','6','-','1','2','3','+','0','.']; \n  return(\n    <main className={classes.board}>\n      {buttonsValue.map(btn =><Button onClick={props.onSetScreenValue}>{btn}</Button>)}\n      <Button onClick={()=>props.onSetResult()}>=</Button>      \n    </main>\n  ); \n}\nexport default Board;","import classes from './Screen.module.css'; \nconst Screen = props => {\n  return(\n    <section className={classes.screen}>\n      <h1 className={classes['screen__logic']}>{props.screenLogic}</h1>\n    </section>\n  ); \n}\nexport default Screen; ","import React,{useState} from 'react';\nimport {evaluate} from 'mathjs'; \nimport Board from './Board'; \nimport Screen from './Screen';\nimport classes from './Calculator.module.css'; \nconst Calculator = props => {\n  const [screenLogic, setScreenLogic] = useState(''); \n  \n  const handleScreenLogic= (value) => {\n    setScreenLogic(prev => `${prev}${value}`)\n  \n  }\n  const handleResult = () =>{\n    setScreenLogic(prev => evaluate(prev))\n  }\n  return(\n    <main className={classes.calculator}>\n      <Screen screenLogic={screenLogic}></Screen>\n      <Board onSetScreenValue={handleScreenLogic} onSetResult={handleResult}></Board>\n    </main>\n  ); \n}\nexport default Calculator; ","import './App.css'; \nimport React from \"react\";\nimport Calculator from \"./Components/Calculator/Calculator\";\nfunction App() {\n  return (\n    <div className={'container'}>\n      <h1>Calculator</h1>\n      <Calculator></Calculator>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}